--- passepartout-0.5/src/util/processman.cc.orig	Mon Jan 12 20:01:33 2004
+++ passepartout-0.5/src/util/processman.cc	Thu Jun 17 16:25:45 2004
@@ -84,7 +84,7 @@
 {
   // Get a callback to run_check every 100ms.
   Glib::signal_timeout().connect
-    (slot(*this, &ProcessManager::run_check), 100);
+    (sigc::mem_fun(*this, &ProcessManager::run_check), 100);
 }
 
 ProcessManager::~ProcessManager() {
--- passepartout-0.5/src/util/filewatcher.h.orig	Mon Jan 26 18:59:18 2004
+++ passepartout-0.5/src/util/filewatcher.h	Thu Jun 17 16:27:00 2004
@@ -4,6 +4,7 @@
 // Copyright (C) 2002 - 2004, Fredrik Arnerup & Rasmus Kaj, See COPYING
 ///
 #include <sigc++/sigc++.h>
+#include <sigc++/compatibility.h>
 #include <time.h>
 #include <string>
 #include <memory>
--- passepartout-0.5/src/util/filewatcher.cc.orig	Mon Jan 12 20:01:33 2004
+++ passepartout-0.5/src/util/filewatcher.cc	Thu Jun 17 16:27:34 2004
@@ -55,7 +55,7 @@
       verbose << "Contact with FAM server established" << std::endl;
       fd = FAMCONNECTION_GETFD(&fc);
       /// \todo don't poll
-      Glib::signal_timeout().connect(slot(*this, &Server::poll), 
+      Glib::signal_timeout().connect(mem_fun(*this, &Server::poll), 
 				     100);
     }
     ~Server() {
@@ -128,7 +128,7 @@
     if(!connection.connected()) {
       debug << "Connecting to timeout" << std::endl;
       connection = 
-	Glib::signal_timeout().connect(slot(*this, &FileWatcher::check_file),
+	Glib::signal_timeout().connect(mem_fun(*this, &FileWatcher::check_file),
 				       100);
     }
   } else connection.disconnect();
--- passepartout-0.5/src/pptout/postscriptviewent.cc.orig	Thu Apr 29 22:36:17 2004
+++ passepartout-0.5/src/pptout/postscriptviewent.cc	Thu Jun 17 20:11:27 2004
@@ -11,6 +11,7 @@
 #include "util/warning.h"
 #include "util/stringutil.h" // tostr
 #include <sstream>
+#include <sigc++/hide.h>
 
 /// \todo Remote the following line!
 typedef BasicFrame::GenPicError GenPicError;
@@ -22,12 +23,12 @@
     scale_factor(_scale_factor)
 {
   ProcessManager::instance().process_stopped.connect
-    (slot(*this, &PostscriptViewent::process_stopped));
+    (mem_fun(*this, &PostscriptViewent::process_stopped));
   /// \todo  Only regenerate when necessary, i.e. not when just moving ...
   frame->object_changed_signal.connect
-    (SigC::hide<Pagent*>(slot(*this, &PostscriptViewent::regenerate)));
+    (SigC::hide<Pagent*>((SigC::Slot0<void>)mem_fun(*this, &PostscriptViewent::regenerate)));
   view.connect_zoom_change
-    (SigC::hide<float>(slot(*this, &PostscriptViewent::regenerate)));
+    (SigC::hide<float>((SigC::Slot0<void>)mem_fun(*this, &PostscriptViewent::regenerate)));
 
   canvas_pixbuf.reset(new Gnome::Canvas::Pixbuf(*content_group));
   canvas_pixbuf->property_anchor() = Gtk::ANCHOR_SOUTH_WEST;
@@ -36,7 +37,7 @@
   
   try {
     set_state(WAIT);
-    frame->generate_picture(SigC::slot(*this, &PostscriptViewent::set_image));
+    frame->generate_picture(mem_fun(*this, &PostscriptViewent::set_image));
   } catch(const GenPicError &e) {
     set_state(e.type == BasicFrame::ASSOCIATION ? MISSING : BROKEN);
     warning << frame->get_name() << ": " << e.what() << std::endl;
@@ -84,7 +85,7 @@
   }
   try {
     set_state(WAIT);
-    frame->generate_picture(SigC::slot(*this, &PostscriptViewent::set_image));
+    frame->generate_picture(mem_fun(*this, &PostscriptViewent::set_image));
   } catch(const GenPicError &e) {
     set_state(e.type == BasicFrame::ASSOCIATION ? MISSING : BROKEN);
     warning << frame->get_name() << ": " << e.what() << std::endl;
--- passepartout-0.5/src/pptout/propertiesdialog.cc.orig	Thu May  6 20:04:08 2004
+++ passepartout-0.5/src/pptout/propertiesdialog.cc	Thu Jun 17 20:56:39 2004
@@ -15,6 +15,7 @@
 #include <gtkmm/stock.h>
 #include <gtkmm/sizegroup.h>
 #include <sigc++/bind.h>
+#include <sigc++/hide.h>
 #include <algorithm>
 #include "pptcore.h"
 #include "widget/spinner.h"
@@ -53,10 +54,10 @@
       line->pack_start(e_name);
       // not sure if connecting to signal_activate adds anything
       e_name.signal_activate().connect
-	(bind(slot(*this, &PropBasic::on_change), NAME));
+	(bind(mem_fun(*this, &PropBasic::on_change), NAME));
       e_name.signal_focus_out_event().connect
         (SigC::hide<GdkEventFocus*>
-         (bind_return(bind(slot(*this, &PropBasic::on_change), NAME), true)));
+         ((SigC::Slot0<int>)bind_return(bind(mem_fun(*this, &PropBasic::on_change), NAME), true)));
       pack_start(*line, Gtk::PACK_SHRINK);
       
       SubPanel *box = manage(new SubPanel("Geometry"));
@@ -69,7 +70,7 @@
       line->pack_start(*label, Gtk::PACK_SHRINK);
       line->pack_start(e_left, Gtk::PACK_SHRINK);
       e_left.signal_value_changed().connect
-	(bind(slot(*this, &PropBasic::on_change), LEFT));
+	(bind(mem_fun(*this, &PropBasic::on_change), LEFT));
       label->set_mnemonic_widget(e_left);
 
       sizegroup->add_widget(*(label = manage(new Gtk::Label("_Width:",
@@ -78,7 +79,7 @@
       line->pack_start(e_width, Gtk::PACK_SHRINK);
       label->set_mnemonic_widget(e_width);
       e_width.signal_value_changed().connect
-	(bind(slot(*this, &PropBasic::on_change), WIDTH));
+	(bind(mem_fun(*this, &PropBasic::on_change), WIDTH));
       box->pack_start(*line, Gtk::PACK_SHRINK);
       
       line = manage(new Gtk::HBox(false, double_space));
@@ -87,7 +88,7 @@
       line->pack_start(*label, Gtk::PACK_SHRINK);
       line->pack_start(e_bottom, Gtk::PACK_SHRINK);
       e_bottom.signal_value_changed().connect
-	(bind(slot(*this, &PropBasic::on_change), BOTTOM));
+	(bind(mem_fun(*this, &PropBasic::on_change), BOTTOM));
       label->set_mnemonic_widget(e_bottom);
 
       sizegroup->add_widget(*(label = manage(new Gtk::Label("_Height:",
@@ -96,7 +97,7 @@
       line->pack_start(e_height, Gtk::PACK_SHRINK);
       label->set_mnemonic_widget(e_height);
       e_height.signal_value_changed().connect
-	(bind(slot(*this, &PropBasic::on_change), HEIGHT));
+	(bind(mem_fun(*this, &PropBasic::on_change), HEIGHT));
       box->pack_start(*line, Gtk::PACK_SHRINK);
       
       line = manage(new Gtk::HBox(false, double_space));
@@ -106,7 +107,7 @@
       line->pack_start(e_rotate, Gtk::PACK_SHRINK);
       label->set_mnemonic_widget(e_rotate);
       e_rotate.signal_value_changed().connect
-	(bind(slot(*this, &PropBasic::on_change), ROTATE));
+	(bind(mem_fun(*this, &PropBasic::on_change), ROTATE));
       
       box->pack_start(*line, Gtk::PACK_SHRINK);
       pack_start(*box, Gtk::PACK_SHRINK);
@@ -116,13 +117,13 @@
       Gtk::HBox *flow_box = manage(new Gtk::HBox(false, double_space));
       flow_box->pack_start(c_locked, Gtk::PACK_SHRINK, triple_space);
       c_locked.signal_toggled().connect
-	(bind(slot(*this, &PropBasic::on_change), LOCKED));
+	(bind(mem_fun(*this, &PropBasic::on_change), LOCKED));
       flow_box->pack_start(c_flow, Gtk::PACK_SHRINK, 0);
       c_flow.signal_toggled().connect
-	(bind(slot(*this, &PropBasic::on_change), FLOWAROUND));
+	(bind(mem_fun(*this, &PropBasic::on_change), FLOWAROUND));
       flow_box->pack_start(e_margin, Gtk::PACK_SHRINK, 0);
       e_margin.signal_value_changed().connect
-	(bind(slot(*this, &PropBasic::on_change), MARGIN));
+	(bind(mem_fun(*this, &PropBasic::on_change), MARGIN));
       pack_start(*flow_box, Gtk::PACK_SHRINK);
 
       set_sensitive(false);
@@ -139,9 +140,9 @@
     object = pagent;
     if(object) {
       geometry_changed_connection = object->geometry_changed_signal.connect
-	(slot(*this, &PropBasic::on_geometry_changed));
+	(mem_fun(*this, &PropBasic::on_geometry_changed));
       props_changed_connection = object->props_changed_signal.connect
-	(slot(*this, &PropBasic::on_props_changed));
+	(mem_fun(*this, &PropBasic::on_props_changed));
     }
     set_sensitive(object);
     if(is_visible())
@@ -245,7 +246,7 @@
   add(book);
 
   book.signal_switch_page().connect
-    (slot(*this, &PropertiesDialog::show_page_contents));
+    (mem_fun(*this, &PropertiesDialog::show_page_contents));
 
   PropBase* prop = new PropBasic(config.LengthUnit.values.front());
   pages.push_back(prop);
@@ -260,7 +261,7 @@
   
   // listen to selection change signals:
   Document::selection_changed_signal.connect
-    (slot(*this, &PropertiesDialog::select_change));
+    (mem_fun(*this, &PropertiesDialog::select_change));
 }
 
 PropertiesDialog::~PropertiesDialog() {}
--- passepartout-0.5/src/pptout/windowmenus.cc.orig	Sat May  1 02:04:24 2004
+++ passepartout-0.5/src/pptout/windowmenus.cc	Thu Jun 17 21:32:33 2004
@@ -6,6 +6,7 @@
 #include <gtkmm/menu.h>
 #include <gtkmm/image.h>
 #include <gtkmm/stock.h>
+#include <sigc++/bind.h>
 #include "widget/filesel.h"
 #include "config.h"
 #include "printdialog.h"
@@ -18,8 +19,6 @@
 void FrameWindow::create_menus() {
   using namespace Gtk;
   using namespace Menu_Helpers;
-  using SigC::bind;
-  using SigC::slot;
 
   /// *** file menu ***
 
@@ -29,50 +28,50 @@
     (ImageMenuElem("_New ...", AccelKey("<control>N"),
 		   *manage(new Gtk::Image(Gtk::Stock::NEW, 
 					  Gtk::ICON_SIZE_MENU)),
-		   slot(*this, &FrameWindow::new_document)));
+		   mem_fun(*this, &FrameWindow::new_document)));
   list_file.push_back
     (ImageMenuElem("New Vi_ew", 
 		   *manage(new Gtk::Image(Gtk::Stock::NEW, 
 					  Gtk::ICON_SIZE_MENU)),
-		   slot(*this, &FrameWindow::duplicate_view)));
+		   mem_fun(*this, &FrameWindow::duplicate_view)));
   new_view_item = &list_file.back();
   list_file.push_back
     (ImageMenuElem("_Open ...", AccelKey("<control>O"),
 		   *manage(new Gtk::Image(Gtk::Stock::OPEN, 
 					  Gtk::ICON_SIZE_MENU)),
-		   slot(*open_dialog, &Filesel::show_all)));
+		   mem_fun(*open_dialog, &Filesel::show_all)));
   list_file.push_back(SeparatorElem());
   list_file.push_back(StockMenuElem(Gtk::Stock::SAVE,
-				    slot(*this, &FrameWindow::save)));
+				    mem_fun(*this, &FrameWindow::save)));
   save_item = &list_file.back();
   list_file.push_back
     (ImageMenuElem("Save _As ...", AccelKey("<shift><control>S"),
 		   *manage(new Gtk::Image(Gtk::Stock::PRINT, 
 					  Gtk::ICON_SIZE_MENU)),
-		   slot(*save_dialog, &Filesel::show_all)));
+		   mem_fun(*save_dialog, &Filesel::show_all)));
   save_as_item = &list_file.back();
   list_file.push_back(SeparatorElem());
   list_file.push_back
     (ImageMenuElem("_Print ...", AccelKey("<control>P"),
 		   *manage(new Gtk::Image(Gtk::Stock::PRINT, 
 					  Gtk::ICON_SIZE_MENU)),
-		   slot(*print_dialog, &PrintDialog::show_it)));
+		   mem_fun(*print_dialog, &PrintDialog::show_it)));
   print_item = &list_file.back();
   list_file.push_back(StockMenuElem(Gtk::Stock::PRINT_PREVIEW,
 				    AccelKey("<shift><control>P"),
-				    slot(*this, 
+				    mem_fun(*this, 
 					 &FrameWindow::print_to_viewer)));
   preview_item = &list_file.back();
   list_file.push_back(SeparatorElem());
   list_file.push_back
     (MenuElem("P_roperties ...",
-	      slot(*this, &FrameWindow::show_doc_props_dialog)));
+	      mem_fun(*this, &FrameWindow::show_doc_props_dialog)));
   props_item = &list_file.back();
   list_file.push_back(SeparatorElem());
   list_file.push_back(StockMenuElem(Gtk::Stock::CLOSE,
-				    slot(*this, &FrameWindow::close)));
+				    mem_fun(*this, &FrameWindow::close)));
   list_file.push_back(StockMenuElem(Gtk::Stock::QUIT,
-				    SigC::slot(&FrameWindow::quit)));
+				    sigc::ptr_fun(&FrameWindow::quit)));
   menubar->items().push_back(MenuElem("_File", AccelKey("<alt>f"), 
 				      *file_menu));
 
@@ -92,64 +91,64 @@
 #endif
   
   list_edit.push_back(StockMenuElem(Gtk::Stock::COPY,
-				    slot(document_view, 
+				    mem_fun(document_view, 
 					 &DocumentView::copy)));
   list_edit.push_back(StockMenuElem(Gtk::Stock::CUT,
-				    slot(document_view, 
+				    mem_fun(document_view, 
 					 &DocumentView::cut)));
   list_edit.push_back(StockMenuElem(Gtk::Stock::PASTE,
-				    slot(document_view, 
+				    mem_fun(document_view, 
 					 &DocumentView::paste)));
   list_edit.push_back
     (StockMenuElem(Gtk::Stock::DELETE,
 		   AccelKey(guint(GDK_Delete), 
 			    Gdk::ModifierType(0)),
-		   slot(document_view, &DocumentView::delete_selected)));
+		   mem_fun(document_view, &DocumentView::delete_selected)));
 
   list_edit.push_back(SeparatorElem());
   list_edit.push_back(MenuElem("Select _All", AccelKey("<control>A"),
-			       slot(document_view, 
+			       mem_fun(document_view, 
 				    &DocumentView::select_all_frames)));
   list_edit.push_back
     (MenuElem("Dese_lect All",	AccelKey("<shift><control>A"),
-	      slot(document_view, &DocumentView::unselect_all_frames)));
+	      mem_fun(document_view, &DocumentView::unselect_all_frames)));
   list_edit.push_back(SeparatorElem());
   // *** arrange submenu ***
   Menu *arrange_menu = manage(new Menu());
   MenuList& list_arrange = arrange_menu->items();
   list_arrange.push_back(MenuElem("_Group", AccelKey("<control>G"),
-				  slot(document_view, 
+				  mem_fun(document_view, 
 				       &DocumentView::group_selected)));
   list_arrange.push_back
     (MenuElem("_Ungroup", AccelKey("<control>U"),
-	      slot(document_view, &DocumentView::ungroup_selected)));
+	      mem_fun(document_view, &DocumentView::ungroup_selected)));
   list_arrange.push_back(SeparatorElem());
   list_arrange.push_back
     (MenuElem("Move to _top", AccelKey("<control>Home"),
-	      bind(slot(document_view, 
+	      bind(mem_fun(document_view, 
 			&DocumentView::rearrange_selected), TOP)));
   list_arrange.push_back
     (MenuElem("Move _up", AccelKey("<control>Page_Up"),
-	      bind(slot(document_view, 
+	      bind(mem_fun(document_view, 
 			&DocumentView::rearrange_selected), UP)));
   list_arrange.push_back
     (MenuElem("Move _down", AccelKey("<control>Page_Down"),
-	      bind(slot(document_view, 
+	      bind(mem_fun(document_view, 
 			&DocumentView::rearrange_selected), DOWN)));
   list_arrange.push_back
     (MenuElem("Move to _bottom", AccelKey("<control>End"),
-	      bind(slot(document_view, 
+	      bind(mem_fun(document_view, 
 			&DocumentView::rearrange_selected), BOTTOM)));
   list_edit.push_back(MenuElem("A_rrange", *arrange_menu));
   list_edit.push_back(SeparatorElem());
   list_edit.push_back(MenuElem("Insert Te_xt Frame ...", 
-			       slot(*text_frame_dialog,
+			       mem_fun(*text_frame_dialog,
 				    &TextFrameDialog::show_raise)));
   list_edit.push_back(MenuElem("Insert _Image ...", 
-			       slot(*import_dialog, &Filesel::show_all)));
+			       mem_fun(*import_dialog, &Filesel::show_all)));
   list_edit.push_back(SeparatorElem());
   list_edit.push_back(MenuElem("Pre_ferences ...", 
-			       slot(config, &PFile::dialog_show)));
+			       mem_fun(config, &PFile::dialog_show)));
   prefs_item = &list_edit.back();
   menubar->items().push_back(MenuElem("_Edit", AccelKey("<alt>e"), 
 				      *edit_menu));
@@ -160,14 +159,14 @@
   page_menu = manage(new Menu());
   MenuList& list_page = page_menu->items();
   list_page.push_back(MenuElem("_Delete", 
-			       slot(document_view, 
+			       mem_fun(document_view, 
 				    &DocumentView::delete_page)));
   list_page.push_back(SeparatorElem());
   list_page.push_back(MenuElem("Insert _Before ...", 
-			       slot(document_view, 
+			       mem_fun(document_view, 
 				    &DocumentView::insert_page_before)));
   list_page.push_back(MenuElem("Insert _After ...", 
-			       slot(document_view, 
+			       mem_fun(document_view, 
 				    &DocumentView::insert_page_after)));
   delete_page_item = &list_page.back();
   //  list_page.push_back(SeparatorElem());
@@ -182,19 +181,19 @@
   MenuList& list_view = view_menu->items();
   list_view.push_back
     (CheckMenuElem("_Toolbar", 
-		   slot(*this, &FrameWindow::toggle_toolbar)));
+		   mem_fun(*this, &FrameWindow::toggle_toolbar)));
   static_cast<CheckMenuItem*>(&list_view.back())->set_active(true);
   list_view.push_back(SeparatorElem());
   list_view.push_back
     (StockMenuElem(Gtk::Stock::PROPERTIES,
-		   slot(PropertiesDialog::instance(),
+		   mem_fun(PropertiesDialog::instance(),
 			&PropertiesDialog::show_raise)));
   list_view.push_back(MenuElem("_Streams", 
-			       slot(StreamDialog::instance(),
+			       mem_fun(StreamDialog::instance(),
 				    &StreamDialog::show_raise)));
 #ifdef ENABLE_UNDO
   list_view.push_back(MenuElem("_Undo history", 
-			       slot(UndoDialog::instance(),
+			       mem_fun(UndoDialog::instance(),
 				    &UndoDialog::show_raise)));
 #endif
   menubar->items().push_back(MenuElem("_View", 
@@ -207,15 +206,15 @@
   Menu *help_menu = manage(new Menu());
   MenuList& list_help = help_menu->items();
   list_help.push_back(MenuElem("_User's guide", AccelKey("F1"),
-			       SigC::slot(&open_docs)));
+			       sigc::ptr_fun(&open_docs)));
   list_help.push_back(MenuElem("_About", 
-			       slot(AboutDialog::instance(), 
+			       mem_fun(AboutDialog::instance(), 
 				    &AboutDialog::show_all)));
   list_help.push_back(SeparatorElem());
   list_help.push_back(MenuElem("_Homepage", 
-			       SigC::slot(&open_homepage)));
+			       sigc::ptr_fun(&open_homepage)));
   list_help.push_back(MenuElem("_Inspiration", 
-			       slot(Inspiration::instance(),
+			       mem_fun(Inspiration::instance(),
 				    &Inspiration::show_all)));
   menubar->items().push_back(MenuElem("_Help", AccelKey("<alt>h"), 
 				      *help_menu));
--- passepartout-0.5/src/pptout/document/pagent.h.orig	Thu Apr 29 20:18:46 2004
+++ passepartout-0.5/src/pptout/document/pagent.h	Thu Jun 17 16:36:51 2004
@@ -5,6 +5,7 @@
 ///
 #include "util/matrix.h"
 #include "util/boundary.h"
+#include <sigc++/connection.h>
 #include <sigc++/object.h>
 #include <sigc++/signal.h>
 #include <libxml++/nodes/element.h>
--- passepartout-0.5/src/pptout/document/imageframe.cc.orig	Sun May  2 21:56:33 2004
+++ passepartout-0.5/src/pptout/document/imageframe.cc	Thu Jun 17 16:38:13 2004
@@ -27,7 +27,7 @@
   association(assoc), filewatcher(association)
 {
   parsed_file = Tempfile::find_new_name();
-  filewatcher.modified_signal.connect(slot(*this, 
+  filewatcher.modified_signal.connect(mem_fun(*this, 
 					   &ImageFrame::on_file_modified));
 }
 
@@ -36,7 +36,7 @@
     association(xml.get_filename("file")),
     filewatcher(association)
 {
-  filewatcher.modified_signal.connect(slot(*this, 
+  filewatcher.modified_signal.connect(mem_fun(*this, 
 					   &ImageFrame::on_file_modified));
   
   if(association.empty()) {
--- passepartout-0.5/src/pptout/document/pagent.cc.orig	Thu May  6 20:04:08 2004
+++ passepartout-0.5/src/pptout/document/pagent.cc	Thu Jun 17 16:41:21 2004
@@ -116,12 +116,12 @@
   // a group would need to maintain a list of connections.
   // Note: we will get multible implicit signals.
   if(parent) {
-    using SigC::slot;
+    using sigc::mem_fun;
       geometry_connection = geometry_changed_signal.connect
-	(slot(*parent, &Group::child_geometry_changed));
+	(mem_fun(*parent, &Group::child_geometry_changed));
 
       props_connection = props_changed_signal.connect
-	(slot(*parent, &Group::child_props_changed));
+	(mem_fun(*parent, &Group::child_props_changed));
     }
 }
 
--- passepartout-0.5/src/pptout/document/rasterframe.cc.orig	Mon May 10 18:31:06 2004
+++ passepartout-0.5/src/pptout/document/rasterframe.cc	Thu Jun 17 16:42:33 2004
@@ -21,7 +21,7 @@
   if(association.empty())
     throw Error::Read("\"file\" attribute missing or empty in RasterFrame");
   
-  filewatcher.modified_signal.connect(slot(*this, 
+  filewatcher.modified_signal.connect(mem_fun(*this, 
 					   &RasterFrame::on_file_modified));
   on_file_modified();
   
@@ -41,7 +41,7 @@
   : BasicFrame(parent, "Raster " + basename(filename)),
    association(filename), filewatcher(association)
 {
-  filewatcher.modified_signal.connect(slot(*this, 
+  filewatcher.modified_signal.connect(mem_fun(*this, 
 					   &RasterFrame::on_file_modified));
  
   try {
--- passepartout-0.5/src/pptout/document/textframe.cc.orig	Thu May  6 20:04:08 2004
+++ passepartout-0.5/src/pptout/document/textframe.cc	Thu Jun 17 16:43:22 2004
@@ -29,7 +29,7 @@
   if(text_stream)
     text_stream->add_frame(this);
   signal_end_write_ps.connect
-    (slot(*this,  &TextFrame::_end_write_ps));
+    (mem_fun(*this,  &TextFrame::_end_write_ps));
 }
 
 TextFrame::TextFrame(const ElementWrap& xml, Group *parent)
@@ -54,7 +54,7 @@
 			+ "\" for text frame");
   } // If stream is not present text_stream is null. This is ok.
   signal_end_write_ps.connect
-    (slot(*this,  &TextFrame::_end_write_ps));
+    (mem_fun(*this,  &TextFrame::_end_write_ps));
 }
 
 TextFrame::~TextFrame() {
--- passepartout-0.5/src/pptout/document/textstream.cc.orig	Mon May 10 18:31:06 2004
+++ passepartout-0.5/src/pptout/document/textstream.cc	Thu Jun 17 17:07:40 2004
@@ -379,7 +379,7 @@
   started.open();
   
   debug << "running internal xml2ps ..." << std::endl;
-  new_canvas = (new xml2ps::PsCanvas(pages, false /* no extra pages */));
+  new_canvas = Glib::RefPtr<xml2ps::PsCanvas>(new xml2ps::PsCanvas(pages, false /* no extra pages */));
   new_canvas->setSubstituteFontAliases(true);
   xml2ps::PsConverter parser(*new_canvas.operator->());
   try {
--- passepartout-0.5/src/pptout/widget/spinner.cc.orig	Fri Apr 16 01:05:43 2004
+++ passepartout-0.5/src/pptout/widget/spinner.cc	Thu Jun 17 17:10:00 2004
@@ -83,7 +83,7 @@
     optionmenu = manage(new Gtk::OptionMenu());
     optionmenu->set_menu(*menu);
     menu->signal_selection_done().connect
-      (slot(*this, &Spinner::on_unit_select));
+      (mem_fun(*this, &Spinner::on_unit_select));
 
     optionmenu->set_size_request(-1, spinbutton->get_height());
     pack_start(*optionmenu);
--- passepartout-0.5/src/pptout/widget/filesel.cc.orig	Mon Jan 12 20:01:25 2004
+++ passepartout-0.5/src/pptout/widget/filesel.cc	Thu Jun 17 17:10:35 2004
@@ -74,7 +74,7 @@
 
   entry.show();
   button.set_size_request(-1, entry.get_height());
-  button.signal_clicked().connect(slot(*this, &FileEntry::show_filesel));
+  button.signal_clicked().connect(mem_fun(*this, &FileEntry::show_filesel));
 }
 
 bool FileEntry::on_mnemonic_activate(bool group_cycling) {
@@ -115,7 +115,7 @@
   } else {
     filesel.reset(new Filesel(*toplevel, window_title, true, false));
   }
-  filesel->signal_hide().connect(slot(*this, &FileEntry::filesel_done));
+  filesel->signal_hide().connect(mem_fun(*this, &FileEntry::filesel_done));
   if(entry.get_text() != *default_value) { //If non-default entry
     filesel->set_filename(entry.get_text().empty() 
 			  ? default_path 
--- passepartout-0.5/src/pptout/widget/imagefilesel.cc.orig	Fri Apr 16 01:05:43 2004
+++ passepartout-0.5/src/pptout/widget/imagefilesel.cc	Thu Jun 17 17:11:12 2004
@@ -58,11 +58,11 @@
   box->show_all();
 
   get_selection_entry()->signal_changed().connect
-    (slot(*this, &ImageFilesel::update_preview));
+    (mem_fun(*this, &ImageFilesel::update_preview));
   show_preview.signal_clicked().connect
-    (slot(*this, &ImageFilesel::update_preview));
+    (mem_fun(*this, &ImageFilesel::update_preview));
   res.signal_value_changed().connect
-    (slot(*this, &ImageFilesel::update_size));
+    (mem_fun(*this, &ImageFilesel::update_size));
 }
 
 void ImageFilesel::update_size() {
--- passepartout-0.5/src/pptout/widget/dialogwrap.cc.orig	Fri Apr 16 16:59:36 2004
+++ passepartout-0.5/src/pptout/widget/dialogwrap.cc	Thu Jun 17 17:12:39 2004
@@ -23,9 +23,9 @@
   Gtk::Button *b = manage(button);
   // Note: It seems that activate means "in any way except a simple click".
   // So we have to add callbacks for both activate and clicked.
-  b->signal_clicked().connect(bind(slot(*this, &Gtk::Dialog::on_response),
+  b->signal_clicked().connect(bind(mem_fun(*this, &Gtk::Dialog::on_response),
 				   action_id));
-  b->signal_activate().connect(bind(slot(*this, &Gtk::Dialog::on_response),
+  b->signal_activate().connect(bind(mem_fun(*this, &Gtk::Dialog::on_response),
 				    action_id));
   return b;
 }
--- passepartout-0.5/src/pptout/inspiration.cc.orig	Mon Jan 12 20:01:19 2004
+++ passepartout-0.5/src/pptout/inspiration.cc	Thu Jun 17 17:13:35 2004
@@ -207,7 +207,7 @@
     grow();
   candy_found();
   connection = Glib::signal_timeout().connect
-    (slot(*this, &Game::update), 20);  
+    (mem_fun(*this, &Game::update), 20);  
 }
 
 void Game::stop_game() {
@@ -292,7 +292,7 @@
   add_button(Gtk::Stock::CLOSE, 0);
   add_button(Gtk::Stock::EXECUTE, 1);
 
-  game->score_change_signal.connect(slot(*this, &Inspiration::score_change));
+  game->score_change_signal.connect(mem_fun(*this, &Inspiration::score_change));
 }
 
 Inspiration::~Inspiration() {}
--- passepartout-0.5/src/pptout/streamdialog.cc.orig	Tue Apr 27 22:41:50 2004
+++ passepartout-0.5/src/pptout/streamdialog.cc	Thu Jun 17 19:27:43 2004
@@ -8,6 +8,9 @@
 #include <gtkmm/table.h>
 #include <gtkmm/sizegroup.h>
 #include <gtkmm/cellrenderertext.h>
+#include <sigc++/bind.h>
+#include <sigc++/bind_return.h>
+#include <sigc++/hide.h>
 
 #include "widget/usererror.h"
 #include "widget/wmisc.h"
@@ -63,8 +66,8 @@
 namespace {
   SigC::Slot1<bool, GdkEventFocus*> 
   adapt_focus_out(SigC::Slot1<void, int> slot, int response_id) {
-    return SigC::hide<GdkEventFocus*>(SigC::bind_return
-                                      (SigC::bind(slot, response_id), true));
+    SigC::Slot0<int> sl = SigC::bind_return(SigC::bind(slot, response_id), true);
+    return SigC::hide<GdkEventFocus*>(sl);
   }
 }
 
@@ -90,7 +93,7 @@
     
     Glib::RefPtr<Gtk::TreeSelection> selection = stream_list.get_selection();
     selection->signal_changed().connect
-      (slot(*this, &StreamDialog::on_selection_changed));
+      (mem_fun(*this, &StreamDialog::on_selection_changed));
     
     Gtk::ScrolledWindow *scroll = manage(new Gtk::ScrolledWindow());
     scroll->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
@@ -159,7 +162,7 @@
       param_list.append_column_editable("Value", param_columns.value);
       param_list.property_height_request() = 90;
       param_model->signal_row_changed().connect
-	(slot(*this, &StreamDialog::on_param_row_changed));
+	(mem_fun(*this, &StreamDialog::on_param_row_changed));
       Gtk::ScrolledWindow *scroll = manage(new Gtk::ScrolledWindow());
       scroll->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
       scroll->set_shadow_type(Gtk::SHADOW_IN);
@@ -174,24 +177,24 @@
   show_all_children();
 
   Document::streams_changed_signal.connect
-    (slot(*this, &StreamDialog::_update));
+    (mem_fun(*this, &StreamDialog::_update));
    
   name_entry.signal_activate().connect
-    (bind(slot(*this, &StreamDialog::on_response), Response::SETNAME));
+    (bind(mem_fun(*this, &StreamDialog::on_response), Response::SETNAME));
   name_entry.signal_focus_out_event().connect
-    (adapt_focus_out(slot(*this, &StreamDialog::on_response),
+    (adapt_focus_out(mem_fun(*this, &StreamDialog::on_response),
                      Response::SETNAME));
   
   file_entry.entry.get_entry()->signal_activate().connect
-    (bind(slot(*this, &StreamDialog::on_response), Response::SETFILE));
+    (bind(mem_fun(*this, &StreamDialog::on_response), Response::SETFILE));
   file_entry.entry.get_entry()->signal_focus_out_event().connect
-    (adapt_focus_out(slot(*this, &StreamDialog::on_response),
+    (adapt_focus_out(mem_fun(*this, &StreamDialog::on_response),
                      Response::SETFILE));
   
   xfrm_entry.entry.get_entry()->signal_activate().connect
-    (bind(slot(*this, &StreamDialog::on_response), Response::SETXFRM));
+    (bind(mem_fun(*this, &StreamDialog::on_response), Response::SETXFRM));
   xfrm_entry.entry.get_entry()->signal_focus_out_event().connect
-    (adapt_focus_out(slot(*this, &StreamDialog::on_response),
+    (adapt_focus_out(mem_fun(*this, &StreamDialog::on_response),
                      Response::SETXFRM));
 }
 
@@ -224,9 +227,9 @@
   Gtk::Button *b = manage(button);
   // Note: It seems that activate means "in any way except a simple click".
   // So we have to add callbacks for both activate and clicked.
-  b->signal_clicked().connect(bind(slot(*this, &StreamDialog::on_response),
+  b->signal_clicked().connect(bind(mem_fun(*this, &StreamDialog::on_response),
                                    action_id));
-  b->signal_activate().connect(bind(slot(*this, &StreamDialog::on_response),
+  b->signal_activate().connect(bind(mem_fun(*this, &StreamDialog::on_response),
 				    action_id));
   return b;
 }
@@ -491,7 +494,7 @@
 
   get_vbox()->pack_start(*main_box);
 
-  Gtk::RadioButton_Helpers::Group group = old_button->get_group();
+  Gtk::RadioButtonGroup group = old_button->get_group();
   new_button->set_group(group);
   old_button->set_active();
   fix_button(new_button, RESPONSE_TOGGLE_MODE);
--- passepartout-0.5/src/pptout/view.h.orig	Thu Apr 22 23:16:32 2004
+++ passepartout-0.5/src/pptout/view.h	Thu Jun 17 19:26:54 2004
@@ -6,6 +6,7 @@
 #include "util/vector.h"
 #include <gdkmm/drawable.h>
 #include <libgnomecanvasmm.h>
+#include <sigc++/slot.h>
 
 namespace Color {
   typedef enum Id { bg, frame, locked, guide, empty };
--- passepartout-0.5/src/pptout/groupmeta.cc.orig	Tue Apr 27 17:54:03 2004
+++ passepartout-0.5/src/pptout/groupmeta.cc	Thu Jun 17 21:18:37 2004
@@ -15,7 +15,7 @@
 Viewent::Ref GroupMeta::create_viewent(View& view, Pagent& node) {
   Viewent::Ref result(new GroupViewent
 		      (view, &dynamic_cast<Group&>(node)));
-  result->set_manage(); // turn refcounting on
+//  result->set_manage(); // turn refcounting on
   result->reference();
   return result;
 }
--- passepartout-0.5/src/pptout/pagesel.cc.orig	Wed Apr 28 01:59:42 2004
+++ passepartout-0.5/src/pptout/pagesel.cc	Thu Jun 17 19:28:13 2004
@@ -98,9 +98,9 @@
   document_view(docview)
 {
   document_view.current_page_num_changed_signal.connect
-    (slot(*this, &Pagesel::update));
+    (mem_fun(*this, &Pagesel::update));
   document_view.document_changed_signal.connect
-    (slot(*this, &Pagesel::update));
+    (mem_fun(*this, &Pagesel::update));
 
   left.add(*manage(new Gtk::Arrow(Gtk::ARROW_LEFT, Gtk::SHADOW_NONE)));
   right.add(*manage(new Gtk::Arrow(Gtk::ARROW_RIGHT, Gtk::SHADOW_NONE)));
@@ -112,10 +112,10 @@
   pack_start(pages);
   pack_start(right);
 
-  left.signal_clicked().connect(slot(*this, &Pagesel::prev));
-  right.signal_clicked().connect(slot(*this, &Pagesel::next));
+  left.signal_clicked().connect(mem_fun(*this, &Pagesel::prev));
+  right.signal_clicked().connect(mem_fun(*this, &Pagesel::next));
   pages.get_menu()->signal_selection_done().connect
-    (slot(*this, &Pagesel::page_selected_action));
+    (mem_fun(*this, &Pagesel::page_selected_action));
 
   show_all();
 }
--- passepartout-0.5/src/pptout/textviewent.cc.orig	Thu Apr 29 22:36:17 2004
+++ passepartout-0.5/src/pptout/textviewent.cc	Thu Jun 17 20:13:42 2004
@@ -19,7 +19,7 @@
   trunc_ind->hide();
   on_geometry_changed(cachedframe);
   dynamic_cast<TextFrame*>(cachedframe)->truncated_state_changed_signal.connect
-    (slot(*this, &TextViewent::on_truncated_state_changed));
+    (mem_fun(*this, &TextViewent::on_truncated_state_changed));
 }
 
 void TextViewent::on_truncated_state_changed(bool truncated) {
--- passepartout-0.5/src/pptout/pageviewent.cc.orig	Thu Apr 29 12:30:27 2004
+++ passepartout-0.5/src/pptout/pageviewent.cc	Thu Jun 17 20:12:19 2004
@@ -9,10 +9,10 @@
     guide_group(view.get_guide_group())
 {
   Document::selection_changed_signal.connect
-    (slot(*this, &PageViewent::on_selection_changed));
+    (mem_fun(*this, &PageViewent::on_selection_changed));
   /// \todo maybe let Page throw a size_changed_signal instead?
   Document::size_changed_signal.connect
-    (slot(*this, &PageViewent::on_size_changed));
+    (mem_fun(*this, &PageViewent::on_size_changed));
   
   using namespace Gnome::Canvas;
 
--- passepartout-0.5/src/pptout/textmeta.cc.orig	Tue Apr 27 17:54:03 2004
+++ passepartout-0.5/src/pptout/textmeta.cc	Thu Jun 17 21:17:49 2004
@@ -21,7 +21,7 @@
 Viewent::Ref TextMeta::create_viewent(View& view, Pagent& node) {
   Viewent::Ref result(new TextViewent
 		      (view, &dynamic_cast<TextFrame&>(node), 2));
-  result->set_manage(); // turn refcounting on
+//  result->set_manage(); // turn refcounting on
   result->reference();
   return result;
 }
@@ -41,9 +41,9 @@
     label->set_mnemonic_widget(e_stream);
     line->pack_start(e_stream, Gtk::PACK_EXPAND_WIDGET);
     e_stream.signal_changed().connect
-      (bind(slot(*this, &PropText::on_change), STREAM));
+      (bind(mem_fun(*this, &PropText::on_change), STREAM));
     Gtk::Button *b_streams = manage(new Gtk::Button("E_dit streams", true));
-    b_streams->signal_clicked().connect(slot(StreamDialog::instance(),
+    b_streams->signal_clicked().connect(mem_fun(StreamDialog::instance(),
 					     &StreamDialog::show_raise));
     line->pack_start(*b_streams, Gtk::PACK_SHRINK);
     pack_start(*line, Gtk::PACK_SHRINK);
@@ -57,7 +57,7 @@
     label->set_mnemonic_widget(e_columns);
     e_columns.limits(1, 64);	// Note: The upper limit is rather arbitrary.
     e_columns.signal_value_changed().connect
-      (bind(slot(*this, &PropText::on_change), COLUMNS));
+      (bind(mem_fun(*this, &PropText::on_change), COLUMNS));
     line->pack_start(e_columns, Gtk::PACK_SHRINK);
     box->pack_start(*line);
     
@@ -69,13 +69,13 @@
     label->set_mnemonic_widget(e_gutter);
     line->pack_start(e_gutter, Gtk::PACK_SHRINK);
     e_gutter.signal_value_changed().connect
-      (bind(slot(*this, &PropText::on_change), GUTTER));
+      (bind(mem_fun(*this, &PropText::on_change), GUTTER));
     box->pack_start(*line);
     pack_start(*box, Gtk::PACK_SHRINK);
     
     // perhaps this should go into the StreamMenu class
     Document::streams_changed_signal.connect
-      (slot(*this, &PropText::on_streams_changed));
+      (mem_fun(*this, &PropText::on_streams_changed));
 
     set_sensitive(false);
     update();
--- passepartout-0.5/src/pptout/aboutdialog.cc.orig	Mon Apr 26 19:32:25 2004
+++ passepartout-0.5/src/pptout/aboutdialog.cc	Thu Jun 17 19:45:12 2004
@@ -12,6 +12,7 @@
 #include <gtkmm/scrolledwindow.h>
 #include "icons/logo.h"
 #include "webbrowser.h"
+#include <sigc++/compatibility.h>
 
 AboutDialog *AboutDialog::_instance = 0;
 
@@ -61,9 +62,9 @@
   webpage->set_relief(Gtk::RELIEF_NONE);
   webpage->set_border_width(0);
   webpage->signal_clicked().connect
-    (bind(slot(*this, &AboutDialog::on_response), OPEN_WEBPAGE));
+    (bind(mem_fun(*this, &AboutDialog::on_response), (int)OPEN_WEBPAGE));
   webpage->signal_activate().connect
-    (bind(slot(*this, &AboutDialog::on_response), OPEN_WEBPAGE));
+    (bind(mem_fun(*this, &AboutDialog::on_response), (int)OPEN_WEBPAGE));
   message->pack_start(*webpage, Gtk::PACK_SHRINK);
 
   label =
--- passepartout-0.5/src/pptout/groupviewent.cc.orig	Thu Apr 29 22:54:13 2004
+++ passepartout-0.5/src/pptout/groupviewent.cc	Thu Jun 17 19:50:50 2004
@@ -5,6 +5,7 @@
 #include "pptcore.h"
 #include <gdkmm.h>
 #include <functional>
+#include <sigc++/hide.h>
 
 class SubView : public View {
 public:
@@ -53,7 +54,7 @@
     subview(new SubView(view, groupframe->get_matrix(), *content_group)),
     frame(groupframe),
     groupcon(frame->group_changed_signal.connect
-	     (SigC::hide<Pagent*>(slot(*this, &GroupViewent::group_changed))))
+	     (SigC::hide<Pagent*>((SigC::Slot0<void>)mem_fun(*this, &GroupViewent::group_changed))))
 {
   // Create the initial content, just as if it was added after this object.
   group_changed();
--- passepartout-0.5/src/pptout/viewent.h.orig	Sun Apr 25 01:34:45 2004
+++ passepartout-0.5/src/pptout/viewent.h	Thu Jun 17 20:06:47 2004
@@ -13,7 +13,7 @@
  * Pagent.  When a View is rescaled etc, all its Viewent s are dropped
  * and new ones created.
  */
-class Viewent : public SigC::Object {
+class Viewent : public Glib::ObjectBase {
 public:
   typedef Glib::RefPtr<const Gdk::Pixmap> PixmapRef;
   typedef Glib::RefPtr<Viewent> Ref;
--- passepartout-0.5/src/pptout/rasterviewent.cc.orig	Thu Apr 29 22:36:17 2004
+++ passepartout-0.5/src/pptout/rasterviewent.cc	Thu Jun 17 20:13:02 2004
@@ -7,9 +7,9 @@
   : Viewent(view, rasterframe), frame(rasterframe)
 {
   frame->props_changed_signal.connect
-    (slot(*this, &RasterViewent::on_geometry_changed));
+    (mem_fun(*this, &RasterViewent::on_geometry_changed));
   frame->object_changed_signal.connect
-    (slot(*this, &RasterViewent::on_object_changed));
+    (mem_fun(*this, &RasterViewent::on_object_changed));
 
   canvas_pixbuf.reset(new Gnome::Canvas::Pixbuf(*content_group));
   canvas_pixbuf->property_x() = 0; canvas_pixbuf->property_y() = 0;
--- passepartout-0.5/src/pptout/printdialog.cc.orig	Mon Jan 12 20:01:19 2004
+++ passepartout-0.5/src/pptout/printdialog.cc	Thu Jun 17 19:45:32 2004
@@ -97,15 +97,15 @@
   using_button.set_active(true);
 
   using_button.signal_clicked().connect
-    (slot(*this, &PrintDialog::update));
+    (mem_fun(*this, &PrintDialog::update));
   // If there are only two buttons in a group, you only need to connect one.
   // If there are more, you need to connect them all. That is annoying.
   all_button.signal_clicked().connect
-    (slot(*this, &PrintDialog::update));
+    (mem_fun(*this, &PrintDialog::update));
   current_button.signal_clicked().connect
-    (slot(*this, &PrintDialog::update));
+    (mem_fun(*this, &PrintDialog::update));
   from_button.signal_clicked().connect
-    (slot(*this, &PrintDialog::update));
+    (mem_fun(*this, &PrintDialog::update));
 
   add_button(Gtk::Stock::CANCEL, 0);
   add_button(Gtk::Stock::PRINT, 1)->grab_default();
--- passepartout-0.5/src/pptout/pagemeta.cc.orig	Sat Mar 20 02:45:03 2004
+++ passepartout-0.5/src/pptout/pagemeta.cc	Thu Jun 17 21:20:25 2004
@@ -11,7 +11,7 @@
 Viewent::Ref PageMeta::create_viewent(View& view, Pagent& node) {
   Viewent::Ref result(new PageViewent
 		      (view, &dynamic_cast<Page&>(node)));
-  result->set_manage(); // turn refcounting on
+//  result->set_manage(); // turn refcounting on
   result->reference();
   return result;
 }
--- passepartout-0.5/src/pptout/viewent.cc.orig	Thu Apr 29 22:36:17 2004
+++ passepartout-0.5/src/pptout/viewent.cc	Thu Jun 17 19:47:21 2004
@@ -17,9 +17,9 @@
   : view(the_view)
 {
   pagent->props_changed_signal.connect
-    (slot(*this, &Viewent::on_properties_changed));
+    (mem_fun(*this, &Viewent::on_properties_changed));
   pagent->geometry_changed_signal.connect
-    (slot(*this, &Viewent::on_geometry_changed));
+    (mem_fun(*this, &Viewent::on_geometry_changed));
 
   // can't create pixbuf until glib (or whatever) is initialized 
   if(!broken_pixbuf) {
--- passepartout-0.5/src/pptout/docview.cc.orig	Sun May  2 21:56:32 2004
+++ passepartout-0.5/src/pptout/docview.cc	Thu Jun 17 20:34:37 2004
@@ -10,6 +10,7 @@
 #include <algorithm>
 
 #include <gtkmm/style.h>
+#include <sigc++/hide.h>
 
 #include "document/loader.h"
 #include "document/textframe.h"
@@ -230,11 +231,11 @@
     current_page_num = document->get_first_page_num();
     
     Document::size_changed_signal.connect
-      (slot(*this, &DocumentView::update_document_size));
+      (mem_fun(*this, &DocumentView::update_document_size));
     Document::changed_signal.connect
-      (slot(*this, &DocumentView::act_on_document_change));
+      (mem_fun(*this, &DocumentView::act_on_document_change));
     Document::selection_changed_signal.connect
-      (slot(*this, &DocumentView::act_on_selection_change));
+      (mem_fun(*this, &DocumentView::act_on_selection_change));
   } else {
     no_pages_group.hide();
   }
@@ -313,7 +314,7 @@
 
   // Update handles when we turn pages
   current_page_num_changed_signal.connect
-    (slot(*this, &DocumentView::update_handles));
+    (mem_fun(*this, &DocumentView::update_handles));
 }
 
 DocumentView::~DocumentView() {
@@ -682,7 +683,7 @@
   return true;
 }
 
-Gdk::Cursor DocumentView::get_cursor(int x, int y) {
+Gdk::CursorType DocumentView::get_cursor(int x, int y) {
   DocRef document = get_document();
   if(!document)
     return Gdk::LEFT_PTR;
@@ -721,7 +722,7 @@
 }
 
 void DocumentView::update_cursor(int x, int y) {
-  win->set_cursor(get_cursor(x, y));
+  win->set_cursor(Gdk::Cursor(get_cursor(x, y)));
 }
 
 namespace {
@@ -997,10 +998,10 @@
     selected_geometry_connection.disconnect();
     selected_props_connection.disconnect();
     selected_geometry_connection = pagent->geometry_changed_signal.connect
-      (SigC::hide<Pagent*>(slot(*this, &DocumentView::update_handles)));
+      (SigC::hide<Pagent*>((SigC::Slot0<void>)mem_fun(*this, &DocumentView::update_handles)));
     // this is for noticing if the pagent is being locked/unlocked
     selected_props_connection = pagent->props_changed_signal.connect
-      (SigC::hide<Pagent*>(slot(*this, &DocumentView::update_handles)));
+      (SigC::hide<Pagent*>((SigC::Slot0<void>)mem_fun(*this, &DocumentView::update_handles)));
   }
   ResizeHandles pos = get_resize_handles(*pagent);
   assert(pos.size() == 8);
--- passepartout-0.5/src/pptout/imagemeta.cc.orig	Tue Apr 27 17:54:03 2004
+++ passepartout-0.5/src/pptout/imagemeta.cc	Thu Jun 17 21:00:34 2004
@@ -8,6 +8,7 @@
 #include "widget/filesel.h"
 #include "widget/wmisc.h"
 #include <gtkmm/label.h>
+#include <sigc++/hide.h>
 
 Pagent* ImageMeta::load(const ElementWrap& xml, Group* parent)
 {
@@ -17,7 +18,7 @@
 Viewent::Ref ImageMeta::create_viewent(View& view, Pagent& node) {
   Viewent::Ref result(new PostscriptViewent
 		      (view, &dynamic_cast<ImageFrame&>(node)));
-  result->set_manage(); // turn refcounting on
+//  result->set_manage(); // turn refcounting on
   result->reference();
   return result;
 }
@@ -38,9 +39,9 @@
       line->pack_start(*label, Gtk::PACK_SHRINK);
       line->pack_start(e_fname);
       e_fname.entry.get_entry()->signal_activate().connect
-	(slot(*this, &PropImage::on_change));
+	(mem_fun(*this, &PropImage::on_change));
       e_fname.entry.get_entry()->signal_focus_out_event().connect
-	(SigC::hide<GdkEventFocus*>(bind_return(slot(*this, 
+	(SigC::hide<GdkEventFocus*>((SigC::Slot0<int>)bind_return(mem_fun(*this, 
                                                      &PropImage::on_change),
                                                 true)));
       pack_start(*line, Gtk::PACK_SHRINK);
--- passepartout-0.5/src/pptout/preferencesdialog.cc.orig	Mon Jan 12 20:01:19 2004
+++ passepartout-0.5/src/pptout/preferencesdialog.cc	Thu Jun 17 20:52:11 2004
@@ -132,11 +132,11 @@
     cancel_button->set_flags(Gtk::CAN_DEFAULT);
     cancel_button->grab_default();
     cancel_button->signal_clicked().
-      connect(SigC::slot(*this, &PreferencesDialog::dialog_cancel));
+      connect(mem_fun(*this, &PreferencesDialog::dialog_cancel));
     apply_button->signal_clicked().
-      connect(SigC::slot(*this, &PreferencesDialog::dialog_apply));
+      connect(mem_fun(*this, &PreferencesDialog::dialog_apply));
     signal_delete_event().
-      connect(SigC::slot(*this, &PreferencesDialog::dialog_delete));
+      connect(mem_fun(*this, &PreferencesDialog::dialog_delete));
 
 
     //Add the notebook pages
--- passepartout-0.5/src/pptout/propbase.cc.orig	Fri Apr 16 21:03:56 2004
+++ passepartout-0.5/src/pptout/propbase.cc	Thu Jun 17 21:22:19 2004
@@ -23,7 +23,7 @@
   // one. I think this has to do with Gtk::Entry having its own
   // window.
   if(!sensitive)
-    foreach(slot(hide_widget));
+    foreach(sigc::ptr_fun(hide_widget));
 }
 
 void PropBase::right_justify(Gtk::Label &label) {
--- passepartout-0.5/src/pptout/docview.h.orig	Thu Apr 29 20:18:45 2004
+++ passepartout-0.5/src/pptout/docview.h	Thu Jun 17 20:19:31 2004
@@ -138,7 +138,7 @@
   void act_on_document_change(DocRef document_);
   void act_on_selection_change(DocRef document_);
   void update_document_size(DocRef document_);
-  Gdk::Cursor get_cursor(int x, int y);
+  Gdk::CursorType get_cursor(int x, int y);
   void update_cursor(int x, int y);
   bool in_move_area(int x, int y);
   Pagent* in_select_area(int x, int y);
--- passepartout-0.5/src/pptout/window.cc.orig	Tue Mar 23 00:03:42 2004
+++ passepartout-0.5/src/pptout/window.cc	Thu Jun 17 20:49:03 2004
@@ -155,77 +155,77 @@
   scroller->add(document_view);
   scroller->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
 
-  {
+/*{
     using namespace Gtk::Toolbar_Helpers;
     ToolList &tools = toolbar->tools();
 
     tools.push_back(StockElem(Gtk::Stock::SAVE,
-			      slot(*this, &FrameWindow::save),
+			      mem_fun(*this, &FrameWindow::save),
 			      "Save file"));
     save_button = static_cast<Gtk::Button*>(tools.back().get_widget());
     tools.push_back(Space());
     tools.push_back(StockElem(Gtk::Stock::PRINT_PREVIEW,
-			      slot(*this, &FrameWindow::print_to_viewer),
+			      mem_fun(*this, &FrameWindow::print_to_viewer),
 			      "Print to external viewer"));
     preview_button = static_cast<Gtk::Button*>(tools.back().get_widget());
     tools.push_back(Space());
     tools.push_back(ButtonElem("Text frame", 
 			       icons->new_frame, 
-			       slot(*text_frame_dialog, 
+			       mem_fun(*text_frame_dialog, 
 				    &TextFrameDialog::show_raise),
 			       "Create new text frame"));
     text_frame_button = static_cast<Gtk::Button*>(tools.back().get_widget());
     tools.push_back(ButtonElem("Image",
 			       icons->moose, 
-			       slot(*import_dialog, &ImageFilesel::show),
+			       mem_fun(*import_dialog, &ImageFilesel::show),
 			       "Import image file"));
     image_frame_button = static_cast<Gtk::Button*>(tools.back().get_widget());
     tools.push_back(Space());
     tools.push_back(StockElem(Gtk::Stock::PROPERTIES,
-			      slot(PropertiesDialog::instance(),
+			      mem_fun(PropertiesDialog::instance(),
 				   &PropertiesDialog::show_raise),
 			       "Show object properties"));
     properties_button = static_cast<Gtk::Button*>(tools.back().get_widget());
     tools.push_back(ButtonElem("Streams", 
 			       icons->streams, 
-			       slot(StreamDialog::instance(),
+			       mem_fun(StreamDialog::instance(),
 				    &StreamDialog::show_raise),
 			       "Show list of text streams"));
     tools.push_back(Space());
     tools.push_back(ToggleElem("Snap to grid", 
 			       icons->grid, 
-			       slot(*this, 
+			       mem_fun(*this, 
 				    &FrameWindow::on_grid_button_clicked),
 			       "Align objects with grid"));
     grid_button = 
       static_cast<Gtk::ToggleButton*>(tools.back().get_widget());
     tools.push_back(Space());
     tools.push_back(StockElem(Gtk::Stock::GOTO_TOP,
-			      bind(slot(document_view, 
+			      bind(mem_fun(document_view, 
 					&DocumentView::rearrange_selected), 
 				   TOP),
 			      "Move object(s) to top"));
 
     tools.push_back(StockElem(Gtk::Stock::GO_UP,
-			      bind(slot(document_view, 
+			      bind(mem_fun(document_view, 
 					&DocumentView::rearrange_selected), 
 				   UP),
 		    "Move object(s) up"));
 
     tools.push_back(StockElem(Gtk::Stock::GO_DOWN,
-			      bind(slot(document_view, 
+			      bind(mem_fun(document_view, 
 					&DocumentView::rearrange_selected), 
 				   DOWN),
 		    "Move object(s) down"));
 
     tools.push_back(StockElem(Gtk::Stock::GOTO_BOTTOM,
-			      bind(slot(document_view, 
+			      bind(mem_fun(document_view, 
 					&DocumentView::rearrange_selected), 
 				   BOTTOM),
 		    "Move object(s) to bottom"));
 
     streams_button = static_cast<Gtk::Button*>(tools.back().get_widget());
-  }
+  }*/
   
   cafe_opera = manage(new Gtk::Statusbar());
   cafe_opera->set_has_resize_grip(false);
@@ -246,23 +246,23 @@
   mainbox->pack_end(*cafe_opera, Gtk::PACK_SHRINK);
   
   document_view.zoom_change_signal.connect
-    (slot(*this, &FrameWindow::zoom_change_action));
+    (mem_fun(*this, &FrameWindow::zoom_change_action));
   zoom_factor->set_menu(*create_zoom_menu());
   zoom_factor->get_menu()->signal_selection_done().connect
-    (slot(*this, &FrameWindow::zoom_factor_changed_action));
+    (mem_fun(*this, &FrameWindow::zoom_factor_changed_action));
   
   open_dialog->signal_hide().connect
-    (slot(*this, &FrameWindow::open_dialog_done));
+    (mem_fun(*this, &FrameWindow::open_dialog_done));
   save_dialog->signal_hide().connect
-    (slot(*this, &FrameWindow::save_dialog_done));
+    (mem_fun(*this, &FrameWindow::save_dialog_done));
   import_dialog->signal_hide().connect
-    (slot(*this, &FrameWindow::import_dialog_done));
+    (mem_fun(*this, &FrameWindow::import_dialog_done));
 
   document_view.document_set_signal.connect
-    (slot(*this, &FrameWindow::on_document_changed));
+    (mem_fun(*this, &FrameWindow::on_document_changed));
 
   Document::changed_signal.connect
-    (slot(*this, &FrameWindow::on_document_updated));
+    (mem_fun(*this, &FrameWindow::on_document_updated));
 
   // put window in global list
   windows.insert(this);
@@ -413,7 +413,7 @@
   // We may have a new DocMeta in view, so connect to the new signal
   DocMeta docmeta = document_view.get_document_meta();
   docmeta.changed_signal().connect
-    (slot(*this, &FrameWindow::on_document_filename_changed));
+    (mem_fun(*this, &FrameWindow::on_document_filename_changed));
   set_filename(basename(docmeta.get_filename()));
 
 }
--- passepartout-0.5/src/pptout/rastermeta.cc.orig	Thu Apr 29 00:26:14 2004
+++ passepartout-0.5/src/pptout/rastermeta.cc	Thu Jun 17 21:14:04 2004
@@ -11,6 +11,7 @@
 #include <gtkmm/togglebutton.h>
 #include <gtkmm/separator.h>
 #include <gtkmm/sizegroup.h>
+#include <sigc++/hide.h>
 #include <util/warning.h>
 
 Pagent* RasterMeta::load(const ElementWrap& xml, Group* parent)
@@ -21,7 +22,7 @@
 Viewent::Ref RasterMeta::create_viewent(View& view, Pagent& node) {
   Viewent::Ref result(new RasterViewent
 		      (view, &dynamic_cast<RasterFrame&>(node)));
-  result->set_manage(); // turn refcounting on
+//  result->set_manage(); // turn refcounting on
   result->reference();
   return result;
 }
@@ -63,9 +64,9 @@
   line->pack_start(*label, Gtk::PACK_SHRINK);
   line->pack_start(e_fname);
   e_fname.entry.get_entry()->signal_activate().connect
-    (bind(slot(*this, &PropRaster::on_change), FILENAME));
+    (bind(mem_fun(*this, &PropRaster::on_change), FILENAME));
   e_fname.entry.get_entry()->signal_focus_out_event().connect
-    (SigC::hide<GdkEventFocus*>(bind_return(bind(slot(*this, 
+    (SigC::hide<GdkEventFocus*>((SigC::Slot0<int>)bind_return(bind(mem_fun(*this, 
                                                       &PropRaster::on_change), 
                                                  FILENAME), 
                                             true)));
@@ -108,11 +109,11 @@
   pack_start(*rezpanel, Gtk::PACK_SHRINK);
   
   e_ppix.signal_value_changed().connect
-    (bind(slot(*this, &PropRaster::on_change), HRES));
+    (bind(mem_fun(*this, &PropRaster::on_change), HRES));
   e_ppiy.signal_value_changed().connect
-    (bind(slot(*this, &PropRaster::on_change), VRES));
+    (bind(mem_fun(*this, &PropRaster::on_change), VRES));
   b_ppic.signal_toggled().connect
-    (bind(slot(*this, &PropRaster::on_change), ASPECT));
+    (bind(mem_fun(*this, &PropRaster::on_change), ASPECT));
   set_sensitive(false);
   update();
 }
@@ -123,10 +124,10 @@
   if(object) {
     // Switch raster resolution
     geometry_changed_connection = object->geometry_changed_signal.connect
-      (SigC::hide<Pagent*>(slot(*this, &PropRaster::update)));
+      (SigC::hide<Pagent*>((SigC::Slot0<void>)mem_fun(*this, &PropRaster::update)));
     // Switched file
     props_changed_connection = object->props_changed_signal.connect
-      (SigC::hide<Pagent*>(slot(*this, &PropRaster::update)));
+      (SigC::hide<Pagent*>((SigC::Slot0<void>)mem_fun(*this, &PropRaster::update)));
   }
 }
 
--- passepartout-0.5/src/pptout/config.cc.orig	Mon Jan 12 20:01:19 2004
+++ passepartout-0.5/src/pptout/config.cc	Thu Jun 17 20:50:34 2004
@@ -143,7 +143,7 @@
   if(dialog)
     return *dialog;
   dialog = new PreferencesDialog();
-  dialog->signal_hide().connect(slot(*this, &PFile::dialog_done));
+  dialog->signal_hide().connect(mem_fun(*this, &PFile::dialog_done));
   return *dialog;
 }
 
--- passepartout-0.5/src/pptout/docpropsdialog.cc.orig	Mon Jan 12 20:01:19 2004
+++ passepartout-0.5/src/pptout/docpropsdialog.cc	Thu Jun 17 21:23:34 2004
@@ -142,7 +142,7 @@
   create_button = add_button(Gtk::Stock::NEW, 1);
 
   template_button->signal_clicked().connect
-    (slot(*this, &DocPropsDialog::update_mode));
+    (mem_fun(*this, &DocPropsDialog::update_mode));
   update_mode();
 
   get_vbox()->show_all();
--- passepartout-0.5/configure.ac.orig	Sun May  9 17:14:08 2004
+++ passepartout-0.5/configure.ac	Thu Jun 17 21:33:55 2004
@@ -66,14 +66,14 @@
 # check for libxml++ 
 AC_SUBST([XMLPP_LIBS])
 AC_SUBST([XMLPP_CFLAGS])
-AC_PKG_CONFIG([XMLPP], [libxml++-1.0])
+AC_PKG_CONFIG([XMLPP], [libxml++-2.6])
 AC_MSG_CHECKING([libxml++ version (>= 1.0.0)])
-xmlpp_version=`pkg-config --modversion libxml++-1.0`
+xmlpp_version=`pkg-config --modversion libxml++-2.6`
 AC_DEFINE_UNQUOTED(XMLPP_MAJOR_VERSION, `echo $xmlpp_version | awk 'BEGIN {FS="."}; {print $1}'`, [libxml++ major version number])
 AC_DEFINE_UNQUOTED(XMLPP_MINOR_VERSION, `echo $xmlpp_version | awk 'BEGIN {FS="."}; {print $2}'`, [libxml++ minor version number])
 
 AC_MSG_RESULT($xmlpp_version)
-if ! pkg-config --atleast-version=1.0.0 libxml++-1.0; then	
+if ! pkg-config --atleast-version=1.0.0 libxml++-2.6; then	
   AC_MSG_ERROR([bad libxml++ version])
 fi
 
@@ -83,18 +83,18 @@
 
 AC_SUBST([GTKMM_LIBS])
 AC_SUBST([GTKMM_CFLAGS])
-AC_PKG_CONFIG([GTKMM], [gtkmm-2.0])
+AC_PKG_CONFIG([GTKMM], [gtkmm-2.4])
 
 AC_SUBST([GNOMECANVAS_LIBS])
 AC_SUBST([GNOMECANVAS_CFLAGS])
-AC_PKG_CONFIG([GNOMECANVAS], [libgnomecanvasmm-2.0])
+AC_PKG_CONFIG([GNOMECANVAS], [libgnomecanvasmm-2.6])
 
 AC_SUBST([GTHREAD_LIBS])
 AC_PKG_CONFIG([GTHREAD], [gthread-2.0])
 
 AC_SUBST([SIGC_LIBS])
 AC_SUBST([SIGC_CFLAGS])
-AC_PKG_CONFIG([SIGC], [sigc++-1.2])
+AC_PKG_CONFIG([SIGC], [sigc++-2.0])
 
 # check for fam
 AC_CHECK_LIB([fam], [FAMOpen])
